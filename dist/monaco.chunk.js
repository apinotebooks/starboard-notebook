(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{1682:function(e,t,n){"use strict";n.r(t),n.d(t,"createMonacoEditor",(function(){return a}));var r=n(1135),o=n(19);function a(e,t,n,a){const l=r.editor.create(e,{value:t.textContent,language:n.language,readOnly:t.metadata.properties.locked,minimap:{enabled:!1},fontSize:14,theme:"starboard-theme",scrollbar:{useShadows:!1,vertical:"auto",horizontal:"auto",verticalScrollbarSize:10,horizontalScrollbarSize:10,alwaysConsumeMouseWheel:!1},overviewRulerBorder:!1,lineNumbersMinChars:3,scrollBeyondLastLine:!1,wordWrap:n.wordWrap});let d=t.metadata.properties.locked;a.controls.subscribeToCellChanges(t.id,(()=>{d!==t.metadata.properties.locked&&function(e,t){e.updateOptions({readOnly:!!t})}(l,t.metadata.properties.locked)}));const i=Object(o.a)((()=>l.layout()),100);window.addEventListener("resize",i),function(e){e.onDidChangeModelDecorations((()=>{requestAnimationFrame(o)}));let t=0,n=0,r=document.querySelector(".cell-controls-above");const o=()=>{const o=e.getDomNode();if(!o)return;const a=e.getContentHeight(),l=r.offsetWidth-2;t===a&&n===l||(t=a,n=l,o.style.width=l+"px",o.style.height=a+"px",e.layout({width:l,height:a}))};requestAnimationFrame((()=>o()))}(l),function(e,t,n){e.addAction({id:"run-cell",label:"Run Cell",keybindings:[r.KeyMod.CtrlCmd|r.KeyCode.Enter],contextMenuGroupId:"starboard",contextMenuOrder:0,run:e=>t({id:n,type:"RUN_CELL",focusNextCell:!1,insertNewCell:!1})}),e.addAction({id:"run-cell-and-next",label:"Run Cell and Select Below",keybindings:[r.KeyMod.Shift|r.KeyCode.Enter],contextMenuGroupId:"starboard",contextMenuOrder:1,run:e=>t({id:n,type:"RUN_CELL",focusNextCell:!0,insertNewCell:!1})}),e.addAction({id:"run-cell-and-insert-cell",label:"Run Cell and Insert Cell",keybindings:[r.KeyMod.Alt|r.KeyCode.Enter],contextMenuGroupId:"starboard",contextMenuOrder:2,run:e=>t({id:n,type:"RUN_CELL",focusNextCell:!0,insertNewCell:!0})})}(l,a.controls.emit,t.id);const c=l.getModel();return c?c.onDidChangeContent((e=>{t.textContent=c.getValue()})):console.error("Monaco editor model was not truthy, change detection will not work"),l}r.editor.defineTheme("starboard-theme",{base:"vs",inherit:!0,rules:[],colors:{"editor.foreground":"#000000","editor.background":"#fbfbfb","editorCursor.foreground":"#00d1b2ba","editor.lineHighlightBackground":"#33333308","editorLineNumber.foreground":"#ccc","editor.selectionBackground":"#00000010","editor.inactiveSelectionBackground":"#88000008","scrollbarSlider.background":"#ff0000","scrollbarSlider.hoverBackground":"#00d1b280","scrollbarSlider.activeBackground":"#00d1b2f0"}}),r.languages.typescript.javascriptDefaults.addExtraLib("\n        /**\n         * Interprets a template literal as an HTML template that can efficiently\n         * render to and update a container.\n         */\n        declare const html: (strings: TemplateStringsArray, ...values: unknown[]) => any ;\n        /**\n        * Interprets a template literal as an SVG template that can efficiently\n        * render to and update a container.\n        */\n        declare const svg: (strings: TemplateStringsArray, ...values: unknown[]) => any;\n        declare const litHtml: any;\n        declare const runtime: any;\n","global.d.ts")}}]);